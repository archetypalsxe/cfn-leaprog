

class AwsServices
  def prefix_to_verbose_service_name
    invert_hash(verbose_service_name_to_prefix)
  end

  def verbose_service_name_to_prefix
    {
      'AWS Batch'=>'batch',
      'Amazon Elastic Compute Cloud (Amazon EC2)'=>'ec2',
      'Amazon EC2 Auto Scaling'=>'autoscaling',
      'Amazon EC2 Image Builder'=>'imagebuilder',
      'AWS Elastic Beanstalk'=>'elasticbeanstalk',
      'Amazon Elastic Container Registry (Amazon ECR)'=>'ecr',
      'Amazon Elastic Container Service (Amazon ECS)'=>'ecs',
      'Amazon Elastic Kubernetes Service (Amazon EKS)'=>'eks',
      'Amazon Elastic Inference'=>'elastic-inference',
      'Elastic Load Balancing'=>'elasticloadbalancing', #both 1 and 2 not in ssm
      'AWS Lambda'=>'lambda',
      'Amazon Lightsail'=>'lightsail',
      'AWS Outposts'=>'outposts',
      'AWS Serverless Application Repository'=>'serverlessrepo',
      'AWS Backup'=>'backup',
      'AWS Backup Storage'=>'backup-storage', # not in ssm
      'Amazon Elastic Block Store (Amazon EBS)'=>'ebs',
      'Amazon Elastic File System (Amazon EFS)'=>'efs',
      'Amazon FSx'=>'fsx',
      'Amazon S3 Glacier'=>'glacier',
      'AWS Import/Export'=>'importexport',
      'AWS Migration Hub'=>'mgh', # not in ssm
      'Amazon Simple Storage Service (Amazon S3)'=>'s3',
      'AWS Snowball'=>'snowball',
      'AWS Snowball Edge'=>'snowball', #not in ssm
      'AWS Storage Gateway'=>'storagegateway',
      'Amazon DynamoDB'=>'dynamodb',
      'Amazon ElastiCache'=>'elasticache',
      'AWS Managed Apache Cassandra Service (MCS)'=>'arn:aws:cassandra:us', # not in ssm
      'Amazon Quantum Ledger Database (Amazon QLDB)'=>'qldb', #qldb-session too?
      'Amazon Redshift'=>'redshift',
      'Amazon Relational Database Service (Amazon RDS)'=>'rds',
      'Amazon RDS Data API'=>'rds-data',
      'Amazon SimpleDB'=>'sdb',
      'AWS Cloud9'=>'cloud9',
      'CodeBuild'=>'codebuild',
      'CodeCommit'=>'codecommit',
      'AWS CodeDeploy'=>'codedeploy',
      'CodePipeline'=>'codepipeline',
      'AWS CodeStar'=>'codestar',
      'AWS CodeStar Notifications'=>'codestar-notifications',
      'AWS X-Ray'=>'xray',
      'AWS Certificate Manager Private Certificate Authority (ACM)'=>'acm-pca',
      'AWS Artifact'=>'artifact', # not in ssm
      'AWS Certificate Manager (ACM)'=>'acm',
      'AWS CloudHSM'=>'cloudhsmv2',
      'AWS CloudHSM Classic'=>'cloudhsm',
      'Amazon Cognito'=>'cognito-identity', # cognito-idp cognito-sync
      'Amazon Detective'=>'detective', # not in ssm
      'AWS Directory Service'=>'ds',
      'AWS Firewall Manager'=>'fms',
      'Amazon GuardDuty'=> 'guardduty',
      'AWS Identity and Access Management (IAM)'=>'iam',
      'IAM Access Analyzer'=>'accessanalyzer',
      'Amazon Inspector'=>'inspector',
      'AWS Key Management Service (AWS KMS)'=>'kms',
      'Amazon Macie '=>'macie',
      'AWS Resource Access Manager (AWS RAM)'=>'ram',
      'AWS Secrets Manager'=>'secretsmanager',
      'AWS Security Hub'=>'securityhub',
      'AWS Single Sign-On (AWS SSO)'=>'sso', #sso-oidc?
      'AWS SSO Directory'=>'sso-directory', # not in ssm
      'AWS Security Token Service (AWS STS)'=>'sts',
      'AWS Shield Advanced'=>'shield',
      'AWS WAF'=>'waf',
      'AWS WAFV2'=>'wafv2',
      'Amazon CodeGuru Profiler'=>'codeguruprofiler',
      'Amazon CodeGuru Reviewer'=>'codeguru-reviewer',
      'Amazon Comprehend'=>'comprehend',
      'AWS DeepRacer'=>'deepracer', # not in ssm
      'Forecast'=>'forecast',
      'Amazon Fraud Detector'=>'frauddetector',
      'Ground Truth Labeling'=>'groundtruthlabeling',
      'Amazon Kendra'=>'kendra',
      'Amazon Lex'=> 'lex-models', # lex-runtime
      'Amazon Machine Learning'=>'machinelearning',
      'Amazon Personalize'=>'personalize',
      'Amazon Polly'=>'polly',
      'Amazon Rekognition'=>'rekognition',
      'Amazon SageMaker'=>'sagemaker', #sagemaker-runtime?
      'Amazon Textract'=>'textract',
      'Amazon Transcribe'=>'transcribe',
      'Amazon Translate'=>'translate',
      'Application Auto Scaling'=>'application-autoscaling',
      'AWS AppConfig'=>'appconfig',
      'AWS Auto Scaling'=>'autoscaling-plans',
      'AWS Chatbot '=>'chatbot',
      'AWS CloudFormation'=>'cloudformation',
      'AWS CloudTrail'=>'cloudtrail',
      'Amazon CloudWatch'=>'cloudwatch',
      'Amazon CloudWatch Events'=>'events',
      'Amazon CloudWatch Logs '=>'logs',
      'Amazon CloudWatch Synthetics'=>'synthetics',
      'AWS Compute Optimizer'=>'compute-optimizer',
      'AWS Config'=>'config',
      'Amazon Data Lifecycle Manager'=>'dlm',
      'AWS Health'=>'health',
      'AWS OpsWorks'=>'opsworks',
      'AWS OpsWorks for Chef Automate'=>'opsworkscm',
      'AWS Organizations'=>'organizations',
      'AWS Resource Groups'=>'resource-groups',
      'Resource Groups Tagging API'=>'resourcegroupstaggingapi',
      'AWS Service Catalog'=>'servicecatalog',
      'AWS Systems Manager'=>'ssm',
      'AWS Trusted Advisor'=>'trustedadvisor',
      'AWS Well-Architected Tool'=>'wellarchitected',
      'AWS Database Migration Service'=>'dms',
      'AWS Application Discovery Service'=>'discovery',
      'AWS Server Migration Service'=>'sms',
      'AWS Amplify'=>'amplify',
      'AWS Device Farm'=>'devicefarm',
      'Amazon API Gateway'=>'apigateway',
      'AWS App Mesh'=>'appmesh',
      'Amazon CloudFront'=>'cloudfront',
      'AWS Cloud Map'=>'servicediscovery',
      'AWS Direct Connect'=>'directconnect',
      'AWS Global Accelerator'=>'globalaccelerator',
      'Network Manager'=>'networkmanager',
      'Amazon RouteÂ 53'=>'route53',
      'Amazon RouteÂ 53 Resolver'=>'route53resolver',
      'Amazon Virtual Private Cloud (Amazon VPC)'=>'ec2', #ec2?
      'Amazon Elastic Transcoder'=>'elastictranscoder',
      'AWS Elemental MediaConnect'=>'mediaconnect',
      'AWS Elemental MediaConvert'=>'mediaconvert',
      'AWS Elemental MediaLive'=>'medialive',
      'AWS Elemental MediaPackage'=>'mediapackage',
      'AWS Elemental MediaStore'=>'mediastore',
      'AWS Elemental MediaTailor'=>'mediatailor',
      'Kinesis Video Streams'=>'kinesisvideo',
      'Amazon Athena'=>'athena',
      'Amazon CloudSearch'=>'cloudsearch',
      'AWS Data Exchange'=>'dataexchange',
      'AWS Data Pipeline'=>'datapipeline',
      'Amazon Elasticsearch Service'=>'es',
      'Amazon EMR'=>'emr',
      'AWS Glue'=>'glue',
      'Amazon Kinesis Data Analytics'=>'kinesisanalytics',
      'Amazon Kinesis Data Firehose'=>'firehose',
      'Amazon Kinesis Data Streams'=>'kinesis',
      'AWS Lake Formation'=>'lakeformation',
      'Amazon Managed Streaming for Apache Kafka (MSK)'=>'kafka',
      'Amazon QuickSight'=>'quicksight',
      'Amazon EventBridge'=>'events',
      'Amazon EventBridge Schemas'=>'schemas',
      'Amazon MQ'=>'mq',
      'Amazon Simple Notification Service (Amazon SNS)'=>'sns',
      'Amazon Simple Queue Service (Amazon SQS)'=>'sqs',
      'AWS Step Functions'=>'states',
      'Amazon Simple Workflow Service (Amazon SWF)'=>'swf',
      'Alexa for Business'=>'alexaforbusiness',
      'Amazon Chime'=>'chime',
      'Amazon WorkMail'=>'workmail',
      'AWS Ground Station'=>'groundstation',
      'AWS IoT Greengrass'=>'greengrass',
      'AWS IoT'=>'iot',
      'AWS IoT Analytics'=>'iotanalytics',
      'AWS IoT Device Tester'=>'iot1click-devices',
      'AWS IoT Events'=>'iotevents',
      'AWS IoT Things Graph'=>'iotthingsgraph',
      'AWS IoT SiteWise'=>'iotsitewise',
      'FreeRTOS'=>'freertos',
      'RoboMaker'=>'robomaker',
      'Amazon Managed Blockchain'=>'managedblockchain',
      'Amazon GameLift'=>'gamelift',
      'Amazon Sumerian'=>'sumerian',
      'Amazon Connect'=>'connect',
      'Amazon Pinpoint'=>'pinpoint',
      'Amazon Simple Email Service (Amazon SES)'=>'ses',
      'Amazon AppStream'=>'appstream',
      'Amazon AppStream 2.0'=>'appstream',
      'Amazon WAM'=>'wam',
      'Amazon WorkDocs'=>'workdocs',
      'Amazon WorkLink'=>'worklink',
      'Amazon WorkSpaces'=>'workspaces',
      'AWS Billing and Cost Management'=>'aws-portal',
      'AWS Marketplace'=>'aws-marketplace',
      'AWS Marketplace Catalog'=>'aws-marketplace',
      'AWS Private Marketplace'=>'aws-marketplace',
      'AWS Support'=>'support'
    }
  end

  private

  def invert_hash(hash)
    result = {}
    hash.each { |k,v| result[v] = k }
    result
  end
end